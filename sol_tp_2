--1
SET SERVEROUTPUT ON;
DECLARE
CURSOR C_EMPLOYEE IS SELECT * FROM EMPLOYEES;
R_EMPLOYEE EMPLOYEES%ROWTYPE; 
v_manager_name EMPLOYEES.LAST_NAME%TYPE;
BEGIN
OPEN C_EMPLOYEE;
LOOP
FETCH C_EMPLOYEE INTO R_EMPLOYEE;
EXIT WHEN C_EMPLOYEE%NOTFOUND;
Select last_name into v_manager_name from employees where employee_id = R_EMPLOYEE.MANAGER_ID ;
DBMS_OUTPUT.PUT_LINE( 'EMPLOYEE '|| R_EMPLOYEE.FIRST_NAME || ' ' || R_EMPLOYEE.LAST_NAME || ' TRAVAIL COMME ' || R_EMPLOYEE.JOB_TITLE || ' DEPUIS ' || R_EMPLOYEE.HIRE_DATE || ' SOUS LA DIRECTION DE ' || R_EMPLOYEE.MANAGER_ID || v_manager_name );
END LOOP;
CLOSE C_EMPLOYEE;
END;

--2
SET SERVEROUTPUT ON
PROMPT ENTREZ LE CLIENT ID;
ACCEPT CST_ID ;
DECLARE
V_NB_CMD NUMBER(3);
V_NB_VEN NUMBER(3);
CURSOR C_VENTE IS SELECT DISTINCT SALESMAN_ID FROM ORDERS;
BEGIN
SELECT COUNT(*) INTO  V_NB_CMD  FROM ORDERS WHERE CUSTOMER_ID = &CST_ID ;
DBMS_OUTPUT.PUT_LINE( || );
OPEN C_VENTE;
LOOP
FETCH C_VENTE INTO V_SALESMAN_ID;
SELECT COUNT(*) INTO V_NB_VEN FROM ORDERS WHERE SALESMAN_ID = V_SALESMAN_ID;
DBMS_OUTPUT.PUT_LINE(  'EMPLOYE A EFFECTUE ' || V_SALESMAN_ID || ': ' ||  V_NB_VEN || ' VENTE' );
EXIT WHEN C_VENTE%NOTFOUND;
END LOOP;
CLOSE C_VENTE;
END;

--3
SET SERVEROUTPUT ON; 
DECLARE 
CURSOR c_customer is SELECT customer_id , SUM(QUANTITY*UNIT_PRICE) FROM orders INNER JOIN order_items USING( order_id ) group by customer_id having SUM(QUANTITY*UNIT_PRICE) > 2000; 
i integer :=0;
begin 
for c in c_customer loop 
update customers set credit_limit=credit_limit+50 where customer_id=c.customer_id; 
i:=i+1; 
end loop; 
DBMS_OUTPUT.PUT_LINE('Nombre de lignes affectés est :' || i);
END;

--4
SET SERVEROUTPUT ON; 
DECLARE 
CURSOR c_customer is SELECT customer_id , SUM(QUANTITY*UNIT_PRICE) FROM orders INNER JOIN order_items USING( order_id ) group by customer_id having SUM(QUANTITY*UNIT_PRICE) > 10000; 
i integer :=0;
 begin 
for c in c_customer loop 
update customers set credit_limit=credit_limit+50 where customer_id=c.customer_id; 
i:=i+1; 
end loop; 
DBMS_OUTPUT.PUT_LINE('Nombre de lignes affectés est :' || i);
END;

--5
SET SERVEROUTPUT ON;
DECLARE
DATE_BEGIN ORDERS.ORDER_DATE%TYPE;
DATE_END ORDERS.ORDER_DATE%TYPE;
VENTE_TOTAL NUMBER(3);
VENTE_EMPLOYEE NUMBER(3);
V_TAUX_VENTE NUMBER(3);
--V_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
DATE_BEGIN:='&DATE_BEG';
DATE_END:='&DATE_EN';
SELECT COUNT(*) INTO VENTE_TOTAL FROM ORDERS;
DBMS_OUTPUT.PUT_LINE('NB DE VENTE TOTAL EST  :' || VENTE_TOTAL);
SELECT COUNT(*) INTO VENTE_EMPLOYEE FROM ORDERS WHERE 
SALESMAN_ID = &V_EMPLOYEE_ID  AND ORDER_DATE<DATE_END AND ORDER_DATE>DATE_BEGIN;
DBMS_OUTPUT.PUT_LINE('LE TAUX DE VENTE EST : ' || (VENTE_EMPLOYEE/ VENTE_TOTAL)*100);
END;

--6	
SET SERVETOUTPUTC ON;
DECLARE
V_VENTE NUMBER(30,4);
V_VENTE_TOTAL NUMBER(30,4):=0;
CURSOR MAN_EMP IS SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE MANAGER_ID=&V_MANAGER_ID;
BEGIN
FOR C IN MAN_EMP LOOP
SELECT COUNT(*) INTO V_VENTE FROM ORDERS WHERE SALESMAN_ID=C.EMPLOYEE_ID;
V_VENTE_TOTAL:=V_VENTE_TOTAL+V_VENTE ;
END LOOP;
IF SQL%FOUND THEN
DBMS_OUTPUT.PUT_LINE('LE NB DE VENTE DEMPLOYEES DE MANAGER  EST : ' || V_VENTE_TOTAL );
ELSE
DBMS_OUTPUT.PUT_LINE('CE MANAGER N EXISTE PAS OU IL N Y A PAD DE VENTE POUR EMPLOYE DE CE MANAGER' );
END IF;
END;
